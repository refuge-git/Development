name: CI/CD para EC2 pública e privada

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do código
      - name: Checkout do Repositório
        uses: actions/checkout@v4

      # 2. Configuração do ambiente Java/Maven
      - name: Configurar JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      # 3. Geração do .jar
      - name: Gerar artefato .JAR
        run: mvn package -DskipTests=true
        working-directory: ./servidor-web-clean-arch

      # 4. Padronizar o nome do JAR
      - name: Renomear JAR para app_loko.jar
        run: |
          JAR_NAME=$(ls target/*.jar)
          mv $JAR_NAME target/app_loko.jar
          echo "Renomeado para: target/app_loko.jar"
        working-directory: ./servidor-web-clean-arch

      # 5. Debug: listar arquivos do target
      - name: Listar arquivos do target
        run: |
          echo "Diretório atual: $(pwd)"
          ls -l ./servidor-web-clean-arch/target

      # 6. Enviar artefato para EC2 pública via rsync
      - name: Copiar JAR para EC2 pública
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: /home/${{ secrets.REMOTE_USER }}/servidor-web-clean-arch
          ARGS: "-rltgoDzvO --delete"
          SOURCE: ./servidor-web-clean-arch/target/app_loko.jar

      # 7. Enviar JAR para EC2 privada e reiniciar serviço via Docker Compose
      - name: Enviar JAR para EC2 privada e reiniciar serviço
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.REMOTE_HOST_PRIVADO }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Verifica se o arquivo JAR existe
            if [ ! -f ./servidor-web-clean-arch/target/app_loko.jar ]; then
              echo "ERRO: arquivo ./servidor-web-clean-arch/target/app_loko.jar não encontrado!"
              exit 1
            fi

            # Enviar JAR para EC2 privada
            scp -o StrictHostKeyChecking=no ./servidor-web-clean-arch/target/app_loko.jar ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST_PRIVADO }}:/usr/share/api/app_loko.jar
            echo "Arquivo JAR enviado ao EC2 privada"

            # Reiniciar serviço via Docker Compose
            ssh ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST_PRIVADO }} 'sudo docker compose restart api'
            echo "Serviço reiniciado via Docker Compose"
